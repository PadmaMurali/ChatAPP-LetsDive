package com.example.chatapp;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;

public class LoginActivity extends AppCompatActivity{

    private FirebaseAuth mAuth;

    private TextView register, forgotpass;
    private EditText useremail, userpassword;
    private Button login;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        mAuth = FirebaseAuth.getInstance();

        InitializeFields();

        register.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                SendUserToRegisterActivity();
            }
        });

        login.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Login_confirm();
            }
        });
    }

    private void InitializeFields(){
        login = (Button) findViewById(R.id.signin);
        useremail = (EditText) findViewById(R.id.email);
        userpassword = (EditText) findViewById(R.id.password);
        register = (TextView) findViewById(R.id.register);
        forgotpass = (TextView) findViewById(R.id.forgotpass);

    }

    private void Login_confirm() {
        String email = useremail.getText().toString().trim();
        String pass = userpassword.getText().toString().trim();

        if (email.isEmpty()) {
            useremail.setError("Email is Required");
            useremail.requestFocus();
            return;
        }
        if (pass.isEmpty()) {
            userpassword.setError("Password is Required");
            userpassword.requestFocus();
            return;
        } else {
            mAuth.signInWithEmailAndPassword(email, pass)
                    .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                        @Override
                        public void onComplete(@NonNull Task<AuthResult> task) {
                            if(task.isSuccessful()){

                                SendToMainActivity();
                                Toast.makeText(LoginActivity.this, "Login Successful!", Toast.LENGTH_SHORT).show();
                            }
                            else{
                                String msg = task.getException().toString();
                                Toast.makeText(LoginActivity.this, "Unsuccessful Login. Try Again!"+msg, Toast.LENGTH_SHORT).show();
                            }
                        }
                    });
        }

    }
    private void SendToMainActivity(){
        Intent mainintent = new Intent(LoginActivity.this, com.example.chatapp.MainActivity.class);
        mainintent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        startActivity(mainintent);
        finish();
    }

    private void SendUserToRegisterActivity(){
        Intent registerintent = new Intent(LoginActivity.this,RegisterActivity.class);
        startActivity(registerintent);
    }
}
